version: '3.8'

services:
  # Base de datos MySQL
  db:
    image: mysql:8.0
    container_name: abh_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: admin123
      MYSQL_DATABASE: mi_base_de_datos
      MYSQL_USER: abh_user
      MYSQL_PASSWORD: abh_password
    volumes:
      - db_data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/data:/docker-entrypoint-initdb.d/data
    ports:
      - "3306:3306"
    networks:
      - abh_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Servidor Node.js
  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: abh_server
    restart: unless-stopped
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_USER: abh_user
      DB_PASSWORD: abh_password
      DB_NAME: mi_base_de_datos
      NODE_ENV: development
    volumes:
      - ./server:/app/server
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
      - node_modules:/app/node_modules
    networks:
      - abh_network
    command: npm run dev

  # Cliente React (opcional)
  client:
    build:
      context: ./client
      dockerfile: ../Dockerfile.client
    container_name: abh_client
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      - ./client:/app
      - client_node_modules:/app/node_modules
    networks:
      - abh_network
    command: npm run dev

volumes:
  db_data:
    driver: local
  node_modules:
    driver: local
  client_node_modules:
    driver: local

networks:
  abh_network:
    driver: bridge
